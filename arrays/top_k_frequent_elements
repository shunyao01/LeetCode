from typing import List

class Solution:
    def topKFrequent(self, nums: List[int], k: int) -> List[int]:
        """
        Return the k most frequent elements in nums

        Args:
            nums: non-empty integer arrays
            k: number of most frequent elemets, where 1 <= k < len(unique nums)

        Return:
            k most frequent elements in a list

        Time Complexity: O(n)
        Space Complexity: O(k)
        """
        # Use hashmap to calculate freqeuncy of each elements
        count = {}
        for n in nums:
            count[n] = 1 if n not in count else count[n] + 1

        # Sort the hashmap O(m) where m is number number of unique elements in nums max 95
        # lambda i : i sort by key, lambda i : count[i] sort by values, lambda i : lenth[i] sort by length
        sorted_count = sorted(count, key = lambda i: count[i], reverse=True)

        return sorted_count[:k]